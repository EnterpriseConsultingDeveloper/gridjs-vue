{"version":3,"file":"index.js","sources":["../src/gridjs-vue.vue","../src/index.js"],"sourcesContent":["<template>\n  <!-- TODO: Figure out a way to scope CSS to the component rather than the global scope -->\n  <!-- TODO: Implement full Grid.js API -->\n  <article :data-uuid=\"uuid\" :class=\"`gridjs__wrapper`\"></article>\n</template>\n\n<script>\nimport { Grid } from 'gridjs'\nimport uuid from 'uuid-random'\nimport elementReady from 'element-ready'\n\nexport default {\n  name: 'Grid',\n  props: {\n    autoWidth: {\n      type: Boolean,\n      default: true\n    },\n    from: {\n      type: String,\n      default: undefined\n    },\n    data: {\n      type: Object,\n      default: () => ({\n        cols: ['Table is null'],\n        rows: ['Please add some data']\n      })\n    },\n    language: {\n      type: Object,\n      default: undefined\n    },\n    pagination: {\n      type: [Object, Boolean],\n      default: false\n    },\n    search: {\n      type: [Object, Boolean],\n      default: false\n    },\n    server: {\n      type: Object,\n      default: undefined\n    },\n    sort: {\n      type: [Object, Boolean],\n      default: false\n    },\n    theme: {\n      type: String,\n      default: 'mermaid'\n    },\n    width: {\n      type: String,\n      default: '100%'\n    }\n  },\n  data() {\n    return {\n      uuid: null,\n      wrapper: null\n    }\n  },\n  async mounted() {\n    // give table a unique id\n    this.uuid = uuid()\n\n    // select the unique wrapper element\n    this.wrapper = await elementReady(`[data-uuid=\"${this.uuid}\"]`)\n\n    // instantiate grid.js\n    if ((this.data && this.data.rows) || this.server || this.from) {\n      this.grid = new Grid({\n        autoWidth: false,\n        columns: this.data.cols,\n        data: this.data.rows,\n        from: this.from,\n        pagination: this.pagination,\n        search: this.search,\n        server: this.server,\n        sort: this.sort,\n        width: this.width\n      }).render(this.wrapper)\n    }\n  },\n  destroyed() {\n    // unload from memory\n    this.grid = undefined\n    this.wrapper = undefined\n  }\n}\n</script>\n\n<style scoped>\n@import '~gridjs/dist/theme/mermaid.css';\n</style>\n","import component from './gridjs-vue.vue'\n\nexport function install(Vue) {\n  if (install.installed) return\n  install.installed = true\n  Vue.component('Grid', component)\n}\n\nconst plugin = {\n  install\n}\n\nlet GlobalVue = null\nif (typeof window !== 'undefined') {\n  GlobalVue = window.Vue\n} else if (typeof global !== 'undefined') {\n  GlobalVue = global.Vue\n}\nif (GlobalVue) {\n  GlobalVue.use(plugin)\n}\n\nexport default component\n"],"names":["install","Vue","installed","component","plugin","GlobalVue","window","global","use"],"mappings":"uYAWA,gyCCTO,SAASA,EAAQC,GAClBD,EAAQE,YACZF,EAAQE,WAAY,EACpBD,EAAIE,UAAU,OAAQA,IAGxB,IAAMC,EAAS,CACbJ,QAAAA,GAGEK,EAAY,KACM,oBAAXC,OACTD,EAAYC,OAAOL,IACQ,oBAAXM,SAChBF,EAAYE,OAAON,KAEjBI,GACFA,EAAUG,IAAIJ"}